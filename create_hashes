#!/usr/bin/env python
'''
call the script:
    python create_hashes.py 100
to generate 100 individual hashes per line
 
Recommended usage would be:
    python create_hashes.py 100 > hashes.txt
for UUCSS
'''
import argparse
import uuid
import sys

parser = argparse.ArgumentParser(description="`python create_hashes.py 100` \
would generate 100 individual hashes per line \
`python create_hashes 1` will return a unique hash without a trailing newline \
for inserting in place")
parser.add_argument('number', type=int,
                    help="Integer number of hashes to generate.")

def unique_id():
    return uuid.uuid4().hex[:5]

def loop_hashes(num_times):
    for _ in range(num_times):
        print unique_id()


if __name__ == '__main__':
    args = parser.parse_args()
    if args.number == 1:
        sys.stdout.write(unique_id())
    else:
        loop_hashes(args.number)
